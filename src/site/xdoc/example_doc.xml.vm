<?xml version="1.0" encoding="UTF-8"?>
<document>
  <properties>
    <title>Generating API with ScalaDoc</title>
    <authors>
      <person name="David Bernard" />
    </authors>
  </properties>
  <body>
    <h1>Generating API with ScalaDoc</h1>

    <span>Prerequis : <a href="usage.html">common usages</a></span>

    <section name="Configuration">
      <p>to generate apidocs / scaladoc for your scala sources, add this to your pom.xml</p>
      <h2>with maven 2.x</h2>
      <source><![CDATA[
<project>
  ...
  <reporting>
    <plugins>
      ...
      <plugin>
        <groupId>${project.groupId}</groupId>
        <artifactId>${project.artifactId}</artifactId>
        <version>${project.version}</version>
      </plugin>
      ...
    </plugins>
  </reporting>
  ...
</project>]]></source>
      <h2>with maven 3.x</h2>
      <source><![CDATA[
<project>
  ...
  <build>
    ...
    <plugins>
      ...
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <reportPlugins>
            <plugin>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.2</version>
            </plugin>
            <plugin>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <version>${project.version}</version>
              <configuration>
                <jvmArgs>
                  <jvmArg>-Xms64m</jvmArg>
                  <jvmArg>-Xmx1024m</jvmArg>
                </jvmArgs>
              </configuration>
            </plugin>
            ...
          </reportPlugins>
        </configuration>
      </plugin>
    </plugins>
  </build>
  ...
</project>]]></source>

    </section>
    <section name="To generate api">
      <p>
        Place scala sources files in :
        <source>src/main/scala</source>
      </p>
      <p>
        Then use the standard maven phases :
        <source>
          <![CDATA[
# generate a site
mvn site
       ]]>
        </source>
      </p>
      <p>
        Or the plugin specifics goal :
        <source>
          <![CDATA[
# generate only the doc
mvn scala:doc
        ]]>
        </source>
      </p>
      <p>See the result under target/site/scaladocs/</p>
    </section>
    <section name="To use a custom api generator">
      <p>
        You need to declare the main class to call (with the same parameter as scaladoc). And you need to list the additional artifact(jar) to use :
        <source><![CDATA[
<configuration>
  <scaladocClassName>org.scala_tools.vscaladoc.Main</scaladocClassName>
  <scalaJars>
    <scalaJar>
      <groupId>org.scala-tools</groupId>
      <artifactId>vscaladoc</artifactId>
      <version>1.0</version>
    </scalaJar>
  </scalaJars>
</configuration>
        ]]></source>
      </p>
      <p>
        Then use the standard maven phases :
        <source>
          <![CDATA[
# generate a site
mvn site
# or generate only the doc
mvn scala:doc
       ]]>
        </source>
      </p>
      <p>See the result under target/site/scaladocs/</p>
    </section>
    <section name="To use vscaladoc">
      <p>
        vscaladoc have a shortcut way to use it (instead of using the custom way describe above) :
        <source><![CDATA[
<configuration>
  <vscalaVersion>1.0</vscalaVersion>
</configuration>
        ]]></source>
      </p>
      <p>
        Then use the standard maven phases :
        <source>
          <![CDATA[
# generate a site
mvn site
# or generate only the doc
mvn scala:doc
       ]]>
        </source>
      </p>
      <p>See the result under target/site/scaladocs/</p>
    </section>
    <section name="Attaching Scaladoc">
      <p>to attach scaladoc JAR files with your project</p>
      <source><![CDATA[
<project>
  ...
  <build>
    <plugins>
      ...
      <plugin>
        <groupId>${project.groupId}</groupId>
        <artifactId>${project.artifactId}</artifactId>
        <version>${project.version}</version>
        <execution>
          <id>attach-javadocs</id>
          <goals>
            <goal>doc-jar</goal>
          </goals>
        </execution>
      </plugin>
      ...
    </plugins>
  </build>
  ...
</project>]]></source>
     </section>
  </body>
</document>
